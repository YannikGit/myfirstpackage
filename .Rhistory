if (check.names) {
if (fix.empty.names)
vnames <- make.names(vnames, unique = TRUE)
else {
nz <- nzchar(vnames)
vnames[nz] <- make.names(vnames[nz], unique = TRUE)
}
}
names(value) <- vnames
if (!mrn) {
if (length(row.names) == 1L && nr != 1L) {
if (is.character(row.names))
row.names <- match(row.names, vnames, 0L)
if (length(row.names) != 1L || row.names < 1L ||
row.names > length(vnames))
stop("'row.names' should specify one of the variables")
i <- row.names
row.names <- value[[i]]
value <- value[-i]
}
else if (!is.null(row.names) && length(row.names) !=
nr)
stop("row names supplied are of the wrong length")
}
else if (!is.null(row.names) && length(row.names) != nr) {
warning("row names were found from a short variable and have been discarded")
row.names <- NULL
}
class(value) <- "data.frame"
if (is.null(row.names))
attr(value, "row.names") <- .set_row_names(nr)
else {
if (is.object(row.names) || !is.integer(row.names))
row.names <- as.character(row.names)
if (anyNA(row.names))
stop("row names contain missing values")
if (anyDuplicated(row.names))
stop(gettextf("duplicate row.names: %s", paste(unique(row.names[duplicated(row.names)]),
collapse = ", ")), domain = NA)
row.names(value) <- row.names
}
value
}
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
n = 500
data <- dataGenerator(n)
lm <- lm(Y ~ X1 + X2 + X3, data = data)
print(lm)
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- dataGenerator (n)
cor(data)
n = 500
data <- dataGenerator(n)
lm <- lm(Y ~ X1 + X2 + X3, data = data)
print(lm)
n = 500
data <- dataGenerator (n)
cor(data)
rep = 500
out = rep(NA, rep)
n_predictors <- 50
rep(4, 2)
rep(4, y)
y = 12
rep(4, y)
for( w in 1:5){
for(d in 1:5){
rep(w, d)
}
}
for( w in 1:5){
for(d in 1:5){
y = rep(w, d)
print(y)
}
}
for( w in 1:5){
for(d in 1:10){
y = rep(w, d)
print(y)
}
}
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator (n)
rep = 500
out = rep(NA, rep)
n_predictors <- 50
for (w in 1:300) {
for(d in 1:5){
eff <- matrix(NA, nrow = rep, ncol = n_predictors)
for(i in 1:rep){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d),
plot = F))
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
#    store_mean_slope(data = eff, depth = d, width = w)
save(out, file = paste0("out_", w, "_", d, "_.Rdata"))
save(eff, file = paste0("eff_", w, "_", d, "_.Rdata"))
}
}
View(data)
View(data)
for (w in 1:300) {
for(d in 1:5){
eff <- matrix(NA, nrow = rep, ncol = n_predictors)
for(i in 1:rep){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d),
plot = F))
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
#    store_mean_slope(data = eff, depth = d, width = w)
save(out, file = paste0("out_", w, "_", d, "_.Rdata"))
save(eff, file = paste0("eff_", w, "_", d, "_.Rdata"))
}
}
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator (n)
rep = 500
out = rep(NA, rep)
n_predictors <- 50
for (w in 1:300) {
for(d in 1:5) {
eff <- matrix(NA, nrow = rep, ncol = n_predictors)
for(i in 1:rep){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d),
plot = F))
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, "_.Rdata"))
save(eff, file = paste0("eff_", d, "_", w, "_.Rdata"))
}
}
View(data)
data <- data_generator(n)
rep = 500
out = rep(NA, rep)
n_predictors <- 50
for (w in 1:300) {
for(d in 1:5) {
eff <- matrix(NA, nrow = rep, ncol = n_predictors)
for(i in 1:rep){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d),
plot = F))
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, "_.Rdata"))
save(eff, file = paste0("eff_", d, "_", w, "_.Rdata"))
}
}
for (w in 1:300) {
for(d in 1:5) {
eff <- matrix(NA, nrow = rep, ncol = n_predictors)
for(i in 1:rep){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(1),
plot = F))
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, "_.Rdata"))
save(eff, file = paste0("eff_", d, "_", w, "_.Rdata"))
}
}
for (w in 1:300) {
for(d in 1:5) {
eff <- matrix(NA, nrow = rep, ncol = n_predictors)
for(i in 1:rep){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(1),
plot = F))
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, "_.Rdata"))
save(eff, file = paste0("eff_", d, "_", w, "_.Rdata"))
}
}
eff <- matrix(NA, nrow = rep, ncol = n_predictors)
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(1),
plot = F))
for (w in 1:300) {
for(d in 1:5) {
eff <- matrix(NA, nrow = rep, ncol = n_predictors)
for(i in 1:rep){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(1),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, "_.Rdata"))
save(eff, file = paste0("eff_", d, "_", w, "_.Rdata"))
}
}
n_predictors <- 3
eff <- matrix(NA, nrow = rep, ncol = n_predictors)
for(i in 1:rep){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(1),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
for (w in 1:300) {
for(d in 1:5) {
eff <- matrix(NA, nrow = rep, ncol = n_predictors)
for(i in 1:rep){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(w),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, "_.Rdata"))
save(eff, file = paste0("eff_", d, "_", w, "_.Rdata"))
}
}
for (w in 1:300) {
sd
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator(n)
rep = 2
out = rep(NA, rep)
n_predictors <- 3
for (w in 1:300) {
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator(n)
rep = 2
out = rep(NA, rep)
n_predictors <- 3
for(i in 1:rep){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, "_.Rdata"))
save(eff, file = paste0("eff_", d, "_", w, "_.Rdata"))
}
}
for(i in 1:rep){
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator(n)
i = 2
out = rep(NA, i)
n_predictors <- 3
for (w in 1:300) {
eff <- matrix(NA, nrow = rep, ncol = n_predictors)
for(i in 1:rep){
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator(n)
repititions = 10
out = rep(NA, repititions)
n_predictors <- 3
for (w in 1:300) {
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator(n)
repititions = 10
out = rep(NA, repititions)
n_predictors <- 3
for (w in 1:300) {
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator(n)
w=1
d=1
repititions = 10
out = rep(NA, repititions)
n_predictors <- 3
for (w in 1:300) {
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator(n)
w=1
d=1
repititions = 10
out = rep(NA, repititions)
n_predictors <- 3
for (w in 1:300) {
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator(n)
w=1
d=1
repititions = 10
out = rep(NA, repititions)
n_predictors <- 3
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(w, d),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(w, d),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, "_.Rdata"))
save(eff, file = paste0("eff_", d, "_", w, "_.Rdata"))
save(out, file = paste0("out_", d, "_", w, "_.Rdata"))
save(eff, file = paste0("eff_", d, "_", w, "_.Rdata"))
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(w, d),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
View(eff)
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
load(results.Rdata)
load("results.Rdata")
View(results)
for (w in 1:300) {
for(d in 1:5) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(w, d),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, "_.Rdata"))
save(eff, file = paste0("eff_", d, "_", w, "_.Rdata"))
}
}
load("results.Rdata")
repititions = 5
out = rep(NA, repititions)
n_predictors <- 3
for (w in 1:300) {
for(d in 1:5) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(w, d),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, "_.Rdata"))
save(eff, file = paste0("eff_", d, "_", w, "_.Rdata"))
}
}
load("results.Rdata")
for (w in 1:300) {
for(d in 1:5) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, "_.Rdata"))
save(eff, file = paste0("eff_", d, "_", w, "_.Rdata"))
}
}
load("results.Rdata")
results <- data.frame(hidden = numeric(),
X1_slope = numeric(),
X2_slope = numeric(),
X3_slope = numeric(),
X1_X2_variance = numeric(),
X1_X3_variance = numeric(),
X2_X3_variance = numeric(),
meanPredict = numeric())
n = 500
data <- data_generator(n)
repititions = 5
out = rep(NA, repititions)
n_predictors <- 3
for (w in 1:300) {
for(d in 1:5) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
}
load("results.Rdata")
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator(n)
repititions = 5
out = rep(NA, repititions)
n_predictors <- 3
for (w in 1:300) {
for(d in 1:5) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
}
load("results.Rdata")
load("eff_5_28.Rdata")
View(eff)
View(data)
View(nn.fit)
