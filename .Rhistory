n_predictors <- 3
for (w in 1:10) {
for(d in 1:3) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
print(results)
}
load("results.Rdata")
View(results)
n = 500
data <- data_generator(n)
repititions = 5
out = rep(NA, repititions)
n_predictors <- 3
for (w in 1:10) {
for(d in 1:3) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
print(results)
}
print(results)
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator(n)
repititions = 5
out = rep(NA, repititions)
n_predictors <- 3
for (w in 1:10) {
for(d in 1:3) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
print(results)
}
for (w in 1:10) {
for(d in 1:3) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
print(results)
}
n = 500
data <- data_generator(n)
lm <- lm(Y ~ X1 + X2 + X3, data = data)
print(lm)
lmx <- lm(X1 ~ X2 + X3, data = data)
print(lmx)
lmx <- lm(X1 ~ X2 + X3 + Y, data = data)
print(lmx)
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
n = 500
data <- data_generator(n)
lm <- lm(Y ~ X1 + X2 + X3, data = data)
print(lm)
lmx <- lm(X1 ~ X2 + X3 + Y, data = data)
print(lmx)
rbind(results, new_row)
if (!exists("results")) {
results <- data.frame(hidden = numeric(),
X1_slope = numeric(),
X2_slope = numeric(),
X3_slope = numeric(),
X1_X2_variance = numeric(),
X1_X3_variance = numeric(),
X2_X3_variance = numeric(),
meanPredict = numeric())
}
new_row <- data.frame(hidden = paste("Depth:", depth, "Width:", width),
X1_slope = mean(slope_data[ ,1]),
X2_slope = mean(slope_data[ ,2]),
X3_slope = mean(slope_data[, 3]),
X1_X2_variance = var(slope_data[ ,1], y = slope_data[ ,2]),
X1_X3_variance = var(slope_data[ ,1], y = slope_data[ ,3]),
X2_X3_variance = var(slope_data[ ,2], y = slope_data[ ,3]),
meanPredict = predict_data)
rbind(results, new_row)
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator(n)
repititions = 5
out = rep(NA, repititions)
n_predictors <- 3
for (w in 1:10) {
for(d in 1:3) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
print(results)
}
for (w in 1:10) {
for(d in 1:3) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
}
print(results)
save(results, file = "results.Rdata")
for (w in 1:10) {
for(d in 1:3) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
}
load("results.Rdata")
View(results)
if (!exists("results")) {
results <- data.frame(hidden = numeric(),
X1_slope = numeric(),
X2_slope = numeric(),
X3_slope = numeric(),
X1_X2_variance = numeric(),
X1_X3_variance = numeric(),
X2_X3_variance = numeric(),
meanPredict = numeric())
}
View(results)
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator(n)
repititions = 5
out = rep(NA, repititions)
n_predictors <- 3
for (w in 1:10) {
for(d in 1:3) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
}
print(results)
if (!exists("results")) {
results <- data.frame(hidden = numeric(),
X1_slope = numeric(),
X2_slope = numeric(),
X3_slope = numeric(),
X1_X2_variance = numeric(),
X1_X3_variance = numeric(),
X2_X3_variance = numeric(),
meanPredict = numeric())
}
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
n = 500
data <- data_generator(n)
repititions = 5
out = rep(NA, repititions)
n_predictors <- 3
if (!exists("results")) {
results <- data.frame(hidden = numeric(),
X1_slope = numeric(),
X2_slope = numeric(),
X3_slope = numeric(),
X1_X2_variance = numeric(),
X1_X3_variance = numeric(),
X2_X3_variance = numeric(),
meanPredict = numeric())
}
results = rbind(results, new_row)
save(results, file = "results.Rdata")
for (w in 1:10) {
for(d in 1:3) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
#    store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w),
X1_slope = mean(eff[ ,1]),
X2_slope = mean(eff[ ,2]),
X3_slope = mean(eff[, 3]),
X1_X2_variance = var(eff[ ,1], y = eff[ ,2]),
X1_X3_variance = var(eff[ ,1], y = eff[ ,3]),
X2_X3_variance = var(eff[ ,2], y = eff[ ,3]),
meanPredict = out)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
}
View(results)
View(new_row)
for (w in 1:10) {
for(d in 1:3) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
#    store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w),
X1_slope = mean(eff[ ,1]),
X2_slope = mean(eff[ ,2]),
X3_slope = mean(eff[, 3]),
X1_X2_variance = var(eff[ ,1], y = eff[ ,2]),
X1_X3_variance = var(eff[ ,1], y = eff[ ,3]),
X2_X3_variance = var(eff[ ,2], y = eff[ ,3]),
meanPredict = out)
results = rbind(results, new_row)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
}
View(results)
for (w in 1:10) {
for(d in 1:3) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
#    store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w),
X1_slope = mean(eff[ ,1]),
X2_slope = mean(eff[ ,2]),
X3_slope = mean(eff[, 3]),
X1_X2_variance = var(eff[ ,1], y = eff[ ,2]),
X1_X3_variance = var(eff[ ,1], y = eff[ ,3]),
X2_X3_variance = var(eff[ ,2], y = eff[ ,3]),
meanPredict = out)
results = rbind(results, new_row)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
}
View(new_row)
View(results)
View(results)
for (w in 1:10) {
for(d in 1:3) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
#    store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w),
X1_slope = mean(eff[ ,1]),
X2_slope = mean(eff[ ,2]),
X3_slope = mean(eff[, 3]),
X1_X2_variance = var(eff[ ,1], y = eff[ ,2]),
X1_X3_variance = var(eff[ ,1], y = eff[ ,3]),
X2_X3_variance = var(eff[ ,2], y = eff[ ,3]),
meanPredict = out)
results = rbind(results, new_row)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
}
View(results)
results <- data.frame(hidden = numeric(),
X1_slope = numeric(),
X2_slope = numeric(),
X3_slope = numeric(),
X1_X2_variance = numeric(),
X1_X3_variance = numeric(),
X2_X3_variance = numeric(),
meanPredict = numeric())
for (w in 1:10) {
for(d in 1:3) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
#    store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w),
X1_slope = mean(eff[ ,1]),
X2_slope = mean(eff[ ,2]),
X3_slope = mean(eff[, 3]),
X1_X2_variance = var(eff[ ,1], y = eff[ ,2]),
X1_X3_variance = var(eff[ ,1], y = eff[ ,3]),
X2_X3_variance = var(eff[ ,2], y = eff[ ,3]),
meanPredict = out)
results = rbind(results, new_row)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
}
View(results)
for (w in 1:10) {
for(d in 1:3) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
#    store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w),
X1_slope = mean(eff[ ,1]),
X2_slope = mean(eff[ ,2]),
X3_slope = mean(eff[, 3]),
X1_X2_variance = var(eff[ ,1], y = eff[ ,2]),
X1_X3_variance = var(eff[ ,1], y = eff[ ,3]),
X2_X3_variance = var(eff[ ,2], y = eff[ ,3]),
meanPredict = out)
results = rbind(results, new_row)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
}
library(dplyr)
results <- results %>% distinct()
View(results)
results <- distinct(results)
results %>% remove_rownames %>% column_to_rownames(var="hidden")
library(tidyverse)
results %>% remove_rownames %>% column_to_rownames(var="hidden")
results2 <- distinct(results)
results <- results[!duplicated(df$hidden), ]
results <- results[!duplicated(results$hidden), ]
View(results)
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
library(dplyr)
library(tidyverse)
results <- data.frame(hidden = numeric(),
X1_slope = numeric(),
X2_slope = numeric(),
X3_slope = numeric(),
X1_X2_variance = numeric(),
X1_X3_variance = numeric(),
X2_X3_variance = numeric(),
meanPredict = numeric())
n = 500
data <- data_generator(n)
repititions = 500
n_predictors <- 3
for (w in 1:300) {
for(d in 1:5) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
out = rep(NA, repititions)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
#    store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w),
X1_slope = mean(eff[ ,1]),
X2_slope = mean(eff[ ,2]),
X3_slope = mean(eff[, 3]),
X1_X2_variance = var(eff[ ,1], y = eff[ ,2]),
X1_X3_variance = var(eff[ ,1], y = eff[ ,3]),
X2_X3_variance = var(eff[ ,2], y = eff[ ,3]),
meanPredict = out)
results = rbind(results, new_row)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
}
results <- results[!duplicated(results$hidden), ]
View(results)
View(results)
return("results")
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
library(dplyr)
results <- data.frame(hidden = numeric(),
X1_slope = numeric(),
X2_slope = numeric(),
X3_slope = numeric(),
X1_X2_variance = numeric(),
X1_X3_variance = numeric(),
X2_X3_variance = numeric(),
meanPredict = numeric())
n = 500
data <- data_generator(n)
repititions = 1
n_predictors <- 3
for (w in 1:300) {
for(d in 1:5) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
out = rep(NA, repititions)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 30, lr = 0.01, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
#    store_mean_slope(slope_data = eff, predict_data = mean(out), depth = d, width = w)
new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w),
X1_slope = mean(eff[ ,1]),
X2_slope = mean(eff[ ,2]),
X3_slope = mean(eff[, 3]),
X1_X2_variance = var(eff[ ,1], y = eff[ ,2]),
X1_X3_variance = var(eff[ ,1], y = eff[ ,3]),
X2_X3_variance = var(eff[ ,2], y = eff[ ,3]),
meanPredict = out)
results = rbind(results, new_row)
save(out, file = paste0("out_", d, "_", w, ".Rdata"))
save(eff, file = paste0("eff_", d, "_", w, ".Rdata"))
}
}
results <- results[!duplicated(results$hidden), ]
View(results)
