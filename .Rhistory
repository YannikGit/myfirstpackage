}
help(save)
load("eff_3_21.Rdata")
View(eff)
load("out_3_21.Rdata")
out
data <- simulate(r=0.9, n = 500, effs = c(1.0, 0.0, 1.0, 1.0))
data
cor(data)
data <- simulate(r=0.9, n = 500, effs = c(1.0, 0.0, 1.0, 0.0))
cor(data)
exp(3)
exp(10)
exp(4)
exp(5)
for (j in 1:10){
w_vektor[j] = c(exp(j)/2)
}
w_vektor = c(numeric())
for (j in 1:10){
w_vektor[j] = c(exp(j)/2)
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:10){
w_vektor[j] = c(exp(j)/4)
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:10){
w_vektor[j] = c(exp(j)/10)
}
print(w_vektor)
w_vektor = c(numeric())
for (j in seq(1, 5, by = 0.5)){
w_vektor[j] = c(exp(j)/2)
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:10){
w_vektor[j] = c(exp(j/2))
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:10){
w_vektor[j] = c(exp(j/1.5))
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:10){
w_vektor[j] = c(exp(j/1.8))
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:10){
w_vektor[j] = c(exp(j/1.9))
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:10){
w_vektor[j] = c(exp(j/1.7))
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = c(exp(j/2))
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = c(exp(j/4))
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = c(exp(j/3))
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = c(exp(j/2.5))
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = c(exp(j/2.2))
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = c(exp(j/2.4))
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = c(exp(j/2.5))
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = c(exp(j/2.6))
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = c(exp(j/2.6))
w_vektor[j] = w_vektor[j]%%10
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = c(exp(j/2.6))
w_vektor[j] = trunc(w_vektor[j])
}
print(w_vektor)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = trunc(exp(j/2.6))
}
print(w_vektor)
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator_Max.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
library(dplyr)
results <- data.frame(hidden = numeric(),
X1_slope = numeric(),
X2_slope = numeric(),
X3_slope = numeric(),
X4_slope = numeric(),
X1_X2_variance = numeric(),
X1_X3_variance = numeric(),
X1_X4_variance = numeric(),
X2_X3_variance = numeric(),
X2_X4_variance = numeric(),
X3_X4_variance = numeric(),
meanPredict = numeric())
predictions <- data.frame(hidden = numeric(), Predictions = numeric())
slopes <- data.frame(hidden = numeric(), Slopes = numeric())
data <- simulate(r=0.9, n = 500, effs = c(1.0, 0.0, 1.0, 0.0))
cor(data)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = trunc(exp(j/2.6))
}
repititions = 100
n_predictors <- 4
for (w in w_vektor) {
for(d in 1:10) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
out = rep(NA, repititions)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
results_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w),
X1_slope = mean(eff[ ,1]),
X2_slope = mean(eff[ ,2]),
X3_slope = mean(eff[ ,3]),
X4_slope = mean(eff[ ,4]),
X1_X2_variance = var(eff[ ,1], y = eff[ ,2]),
X1_X3_variance = var(eff[ ,1], y = eff[ ,3]),
X1_X4_variance = var(eff[ ,1], y = eff[ ,4]),
X2_X3_variance = var(eff[ ,2], y = eff[ ,3]),
X2_X4_variance = var(eff[ ,2], y = eff[ ,4]),
X3_X4_variance = var(eff[ ,3], y = eff[ ,4]),
meanPredict = out)
results = rbind(results, results_new_row)
predictions_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w), Predictions = out)
predictions = rbind(predictions, predictions_new_row)
slopes_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w), Slopes = eff)
slopes = rbind(slopes, slopes_new_row)
}
}
View(predictions_new_row)
View(predictions_new_row)
View(predictions)
View(results)
View(slopes)
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator_Max.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
library(dplyr)
results <- data.frame(hidden = numeric(),
X1_slope = numeric(),
X2_slope = numeric(),
X3_slope = numeric(),
X4_slope = numeric(),
X1_X2_variance = numeric(),
X1_X3_variance = numeric(),
X1_X4_variance = numeric(),
X2_X3_variance = numeric(),
X2_X4_variance = numeric(),
X3_X4_variance = numeric(),
meanPredict = numeric())
predictions <- data.frame(hidden = numeric(), Predictions = numeric())
slopes <- data.frame(hidden = numeric(), Slopes = numeric())
data <- simulate(r=0.9, n = 500, effs = c(1.0, 0.0, 1.0, 0.0))
cor(data)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = trunc(exp(j/2.6))
}
repititions = 100
n_predictors <- 4
for (w in w_vektor) {
for(d in 1:10) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
out = rep(NA, repititions)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 1, lr = 0.000000000000001, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
results_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w),
X1_slope = mean(eff[ ,1]),
X2_slope = mean(eff[ ,2]),
X3_slope = mean(eff[ ,3]),
X4_slope = mean(eff[ ,4]),
X1_X2_variance = var(eff[ ,1], y = eff[ ,2]),
X1_X3_variance = var(eff[ ,1], y = eff[ ,3]),
X1_X4_variance = var(eff[ ,1], y = eff[ ,4]),
X2_X3_variance = var(eff[ ,2], y = eff[ ,3]),
X2_X4_variance = var(eff[ ,2], y = eff[ ,4]),
X3_X4_variance = var(eff[ ,3], y = eff[ ,4]),
meanPredict = out)
results = rbind(results, results_new_row)
predictions_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w), Predictions = out)
predictions = rbind(predictions, predictions_new_row)
slopes_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w), Slopes = eff)
slopes = rbind(slopes, slopes_new_row)
}
}
results <- results[!duplicated(results$hidden), ]
save(results, file = "untrained_results.Rdata")
save(slopes, file = "untrained_slopes.Rdata")
save(predictions, file = "untrained_predictions.Rdata")
View(predictions)
View(results)
predict(lm)
data <- simulate(r=0.9, n = 500, effs = c(1.0, 0.0, 1.0, 0.0))
data <- as.data.frame(data)
lm <- lm(Y ~ X1 + X2 + X3, data = data)
lm}
lm
lm <- lm(Y ~ X1 + X2 + X3 + X4, data = data)
lm
data <- simulate(r=0.9, n = 500, effs = c(1.0, 0.0, 1.0, 0.0))
data <- as.data.frame(data)
lm <- lm(Y ~ X1 + X2 + X3 + X4, data = data)
lm
lm <- lm(Y ~ X1 + X2 + X3 + X4, data = data)
lm
lm <- lm(Y ~ X1 + X2 + X3 + X4, data = data)
lm
data <- simulate(r=0.9, n = 500, effs = c(1.0, 0.0, 1.0, 0.0))
data <- as.data.frame(data)
lm <- lm(Y ~ X1 + X2 + X3 + X4, data = data)
lm
for (i in 1:500){
lm <- lm(Y ~ X1 + X2 + X3 + X4, data = data)
lm
}
lm
lm <- lm(Y ~ X1 + X2 + X3 + X4, data = data)
lm
lm <- lm(Y ~ X1 + X2 + X3 + X4, data = data)
lm
predict(lm)
data <- simulate(r=0.9, n = 500, effs = c(1.0, 0.0, 1.0, 0.0))
data <- as.data.frame(data)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator_Max.R")
data <- simulate(r=0.9, n = 500, effs = c(1.0, 0.0, 1.0, 0.0))
data <- as.data.frame(data)
lm_predictions <- numeric(0)
for (i in 1:500){
lm <- lm(Y ~ X1 + X2 + X3 + X4, data = data)
lm_predictions <- c(predictions, predict(lm))
}
lm_predictions <- mean(lm_predictions)
lm_predictions
lm_predictions <- numeric(0)
for (i in 1:500){
lm <- lm(Y ~ X1 + X2 + X3 + X4, data = data)
lm_predictions <- c(lm_predictions, predict(lm))
}
lm_predictions <- mean(lm_predictions)
lm_predictions
lm
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator_Max.R")
data <- simulate(r=0.9, n = 500, effs = c(1.0, 0.0, 1.0, 0.0))
data <- as.data.frame(data)
lm <- lm(Y ~ X1 + X2 + X3 + X4, data = data)
lm
lm <- lm(Y ~ X1 + X2 + X3 + X4, data = data)
lm
pairs(~ Y + X1 + X2 + X3 + X4, data= data)
pairs(data = data)
pairs(~ Y + X1 + X2 + X3 + X4, data= data, lower.panel = panel.cor)
pairs(~ Y + X1 + X2 + X3 + X4, data= data, lower.panel = panel.cor)
pairs(~ Y + X1 + X2 + X3 + X4, data= data)
cor(data)
cov(data)
library(fields)
image.plot(result)
image.plot(results)
image(results)
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator_Max.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
library(dplyr)
results <- data.frame(hidden = numeric(),
X1_slope = numeric(),
X2_slope = numeric(),
X3_slope = numeric(),
X4_slope = numeric(),
X1_X2_variance = numeric(),
X1_X3_variance = numeric(),
X1_X4_variance = numeric(),
X2_X3_variance = numeric(),
X2_X4_variance = numeric(),
X3_X4_variance = numeric(),
meanPredict = numeric())
predictions <- data.frame(hidden = numeric(), Predictions = numeric())
slopes <- data.frame(hidden = numeric(), Slopes = numeric())
data <- simulate(r=0.9, n = 500, effs = c(1.0, 0.0, 1.0, 0.0))
cor(data)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = trunc(exp(j/2.6))
}
repititions = 100
n_predictors <- 4
for (w in w_vektor) {
for(d in 1:10) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
out = rep(NA, repititions)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 300, lr = 0.01, hidden = c(rep(w, d)),
plot = F)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
results_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w),
X1_slope = mean(eff[ ,1]),
X2_slope = mean(eff[ ,2]),
X3_slope = mean(eff[ ,3]),
X4_slope = mean(eff[ ,4]),
X1_X2_variance = var(eff[ ,1], y = eff[ ,2]),
X1_X3_variance = var(eff[ ,1], y = eff[ ,3]),
X1_X4_variance = var(eff[ ,1], y = eff[ ,4]),
X2_X3_variance = var(eff[ ,2], y = eff[ ,3]),
X2_X4_variance = var(eff[ ,2], y = eff[ ,4]),
X3_X4_variance = var(eff[ ,3], y = eff[ ,4]),
meanPredict = out)
results = rbind(results, results_new_row)
predictions_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w), Predictions = out)
predictions = rbind(predictions, predictions_new_row)
slopes_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w), Slopes = eff)
slopes = rbind(slopes, slopes_new_row)
}
}
results <- results[!duplicated(results$hidden), ]
save(results, file = "trained_results.Rdata")
save(slopes, file = "trained_slopes.Rdata")
save(predictions, file = "trained_predictions.Rdata")
View(results)
View(slopes)
View(predictions)
View(nn.fit)
View(eff)
View(data)
View(eff)
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator_Max.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
library(dplyr)
results <- data.frame(hidden = numeric(),
X1_slope = numeric(),
X2_slope = numeric(),
X3_slope = numeric(),
X4_slope = numeric(),
X1_X2_variance = numeric(),
X1_X3_variance = numeric(),
X1_X4_variance = numeric(),
X2_X3_variance = numeric(),
X2_X4_variance = numeric(),
X3_X4_variance = numeric(),
meanPredict = numeric())
predictions <- data.frame(hidden = numeric(), Predictions = numeric())
slopes <- data.frame(hidden = numeric(), Slopes = numeric())
data <- simulate(r=0.9, n = 500, effs = c(1.0, 0.0, 1.0, 0.0))
cor(data)
w_vektor = c(numeric())
for (j in 1:15){
w_vektor[j] = trunc(exp(j/2.6))
}
repititions = 100
n_predictors <- 4
for (w in w_vektor) {
for(d in 1:10) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
out = rep(NA, repititions)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 300, lr = 0.01, hidden = c(rep(w, d)),
plot = F, early_stopping = TRUE)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
results_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w),
X1_slope = mean(eff[ ,1]),
X2_slope = mean(eff[ ,2]),
X3_slope = mean(eff[ ,3]),
X4_slope = mean(eff[ ,4]),
X1_X2_variance = var(eff[ ,1], y = eff[ ,2]),
X1_X3_variance = var(eff[ ,1], y = eff[ ,3]),
X1_X4_variance = var(eff[ ,1], y = eff[ ,4]),
X2_X3_variance = var(eff[ ,2], y = eff[ ,3]),
X2_X4_variance = var(eff[ ,2], y = eff[ ,4]),
X3_X4_variance = var(eff[ ,3], y = eff[ ,4]),
meanPredict = out)
results = rbind(results, results_new_row)
predictions_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w), Predictions = out)
predictions = rbind(predictions, predictions_new_row)
slopes_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w), Slopes = eff)
slopes = rbind(slopes, slopes_new_row)
}
}
results <- results[!duplicated(results$hidden), ]
save(results, file = "trained_results.Rdata")
save(slopes, file = "trained_slopes.Rdata")
save(predictions, file = "trained_predictions.Rdata")
for (w in w_vektor) {
for(d in 1:10) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
out = rep(NA, repititions)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 300, lr = 0.01, hidden = c(rep(w, d)),
plot = F, early_stopping = 10)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
results_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w),
X1_slope = mean(eff[ ,1]),
X2_slope = mean(eff[ ,2]),
X3_slope = mean(eff[ ,3]),
X4_slope = mean(eff[ ,4]),
X1_X2_variance = var(eff[ ,1], y = eff[ ,2]),
X1_X3_variance = var(eff[ ,1], y = eff[ ,3]),
X1_X4_variance = var(eff[ ,1], y = eff[ ,4]),
X2_X3_variance = var(eff[ ,2], y = eff[ ,3]),
X2_X4_variance = var(eff[ ,2], y = eff[ ,4]),
X3_X4_variance = var(eff[ ,3], y = eff[ ,4]),
meanPredict = out)
results = rbind(results, results_new_row)
predictions_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w), Predictions = out)
predictions = rbind(predictions, predictions_new_row)
slopes_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w), Slopes = eff)
slopes = rbind(slopes, slopes_new_row)
}
}
View(results)
View(results)
View(eff)
for (w in w_vektor) {
for(d in 1:10) {
eff <- matrix(NA, nrow = repititions, ncol = n_predictors)
out = rep(NA, repititions)
for(i in 1:repititions){
nn.fit <- dnn(Y~., data = data,
epochs = 300, lr = 0.01, hidden = c(rep(w, d)),
plot = F, early_stopping = 5)
eff[i, ] = diag(marginalEffects(nn.fit, interactions = FALSE)$mean)
out[i] = mean(predict(nn.fit))
}
results_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w),
X1_slope = mean(eff[ ,1]),
X2_slope = mean(eff[ ,2]),
X3_slope = mean(eff[ ,3]),
X4_slope = mean(eff[ ,4]),
X1_X2_variance = var(eff[ ,1], y = eff[ ,2]),
X1_X3_variance = var(eff[ ,1], y = eff[ ,3]),
X1_X4_variance = var(eff[ ,1], y = eff[ ,4]),
X2_X3_variance = var(eff[ ,2], y = eff[ ,3]),
X2_X4_variance = var(eff[ ,2], y = eff[ ,4]),
X3_X4_variance = var(eff[ ,3], y = eff[ ,4]),
meanPredict = out)
results = rbind(results, results_new_row)
predictions_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w), Predictions = out)
predictions = rbind(predictions, predictions_new_row)
slopes_new_row <- data.frame(hidden = paste("Depth:", d, "Width:", w), Slopes = eff)
slopes = rbind(slopes, slopes_new_row)
}
}
View(eff)
