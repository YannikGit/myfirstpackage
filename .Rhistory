image.plot(hiddden, untrained_results$X1_slope)
image.plot(untrained_results$hidden, untrained_results$X1_slope)
library(fields)
library(ggplot2)
library(officer)
library(flextable)
load("trained_results.Rdata")
trained_results <- results
load("untrained_results.Rdata")
untrained_results <- results
load("earlyStop_results.Rdata")
earlyStop_results <- results
View(earlyStop_results)
View(results)
View(trained_results)
View(untrained_results)
slopes_earlyStop = ggplot(earlyStop_results, aes(x = hidden)) +
geom_point(aes(y = X1_slope, color = "X1"), size = 1) +
geom_point(aes(y = X2_slope, color = "X2"), size = 1) +
geom_point(aes(y = X3_slope, color = "X3"), size = 1) +
geom_point(aes(y = X4_slope, color = "X4"), size = 1) +
xlab("Depth and Width") +
ylab("Mean Slopes") +
scale_color_manual(values = c("X1" = "black", "X2" = "red",
"X3" = "blue", "X4" = "purple"),
labels = c("X1", "X2", "X3", "X4"))
slopes_trained
slopes_earlyStop
slopes_earlyStop
set.seed(123)
source("C:/Users/Besitzer/Documents/myfirstpackage/R/AME.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/dataGenerator_Max.R")
source("C:/Users/Besitzer/Documents/myfirstpackage/R/mean_slopes.R")
library(cito)
library(dplyr)
results <- data.frame(hidden = numeric(),
X1_slope = numeric(),
X2_slope = numeric(),
X3_slope = numeric(),
X4_slope = numeric(),
X1_X2_variance = numeric(),
X1_X3_variance = numeric(),
X1_X4_variance = numeric(),
X2_X3_variance = numeric(),
X2_X4_variance = numeric(),
X3_X4_variance = numeric(),
meanPredict = numeric())
library(fields)
library(ggplot2)
library(officer)
library(flextable)
load("trained_results.Rdata")
trained_results <- results
load("untrained_results.Rdata")
untrained_results <- results
load("earlyStop_results.Rdata")
earlyStop_results <- results
summary(untrained_results)
summary(trained_results)
summary(earlyStop_results)
slopes_earlyStop = ggplot(earlyStop_results, aes(x = hidden)) +
geom_point(aes(y = X1_slope, color = "X1"), size = 1) +
geom_point(aes(y = X2_slope, color = "X2"), size = 1) +
geom_point(aes(y = X3_slope, color = "X3"), size = 1) +
geom_point(aes(y = X4_slope, color = "X4"), size = 1) +
xlab("Depth and Width") +
ylab("Mean Slopes") +
scale_color_manual(values = c("X1" = "black", "X2" = "red",
"X3" = "blue", "X4" = "purple"),
labels = c("X1", "X2", "X3", "X4"))
slopes_earlyStop
variance_trained = ggplot(trained_results, aes(x = hidden)) +
geom_point(aes(y = X1_X2_variance, color = "X1"), size = 1) +
geom_point(aes(y = X1_X3_variance, color = "X2"), size = 1) +
geom_point(aes(y = X1_X4_variance, color = "X3"), size = 1) +
geom_point(aes(y = X2_X3_variance, color = "X4"), size = 1) +
xlab("Depth and Width") +
ylab("Mean Slopes") +
scale_color_manual(values = c("X1" = "black", "X2" = "red",
"X3" = "blue", "X4" = "purple"),
labels = c("X1_X2", "X1_X3", "X1_X4", "X2_X3"))
variance_trained
variance_trained = ggplot(trained_results, aes(x = hidden)) +
geom_point(aes(y = X1_X2_variance, color = "X1"), size = 1) +
geom_point(aes(y = X1_X3_variance, color = "X2"), size = 1) +
geom_point(aes(y = X1_X4_variance, color = "X3"), size = 1) +
geom_point(aes(y = X2_X3_variance, color = "X4"), size = 1) +
xlab("Depth and Width") +
ylab("Mean Slopes") +
scale_color_manual(values = c("X1" = "black", "X2" = "red",
"X3" = "blue", "X4" = "purple"),
labels = c("X1_X2", "X1_X3", "X1_X4", "X2_X3"))
variance_trained
var_earlyStop = ggplot(earlyStop_results, aes(x = hidden)) +
geom_point(aes(y = X1_X2_variance, color = "X1"), size = 1) +
geom_point(aes(y = X1_X3_variance, color = "X2"), size = 1) +
geom_point(aes(y = X1_X4_variance, color = "X3"), size = 1) +
geom_point(aes(y = X2_X3_variance, color = "X4"), size = 1) +
xlab("Depth and Width") +
ylab("Mean Slopes") +
scale_color_manual(values = c("X1" = "black", "X2" = "red",
"X3" = "blue", "X4" = "purple"),
labels = c("X1_X2", "X1_X3", "X1_X4", "X2_X3"))
var_earlyStop
var_earlyStop = ggplot(earlyStop_results, aes(x = hidden)) +
geom_point(aes(y = X1_X2_variance, color = "X1"), size = 1) +
geom_point(aes(y = X1_X3_variance, color = "X2"), size = 1) +
geom_point(aes(y = X1_X4_variance, color = "X3"), size = 1) +
geom_point(aes(y = X2_X3_variance, color = "X4"), size = 1) +
xlab("Depth and Width") +
ylab("Mean Slopes") +
scale_color_manual(values = c("X1" = "black", "X2" = "red",
"X3" = "blue", "X4" = "purple"),
labels = c("X1_X2", "X1_X3", "X1_X4", "X2_X3"))
var_earlyStop
var_earlyStop
variance_trained
var_earlyStop
trained_predict = ggplot(trained_results, aes(x = hidden)) +
geom_point(aes(y = meanPredict, color = "X1"), size = 1)
trained_predict = ggplot(trained_results, aes(x = hidden)) +
trained_predict = ggplot(trained_results, aes(x = hidden)) +
stop
trained_predict = ggplot(trained_results, aes(x = hidden)) +
xlab("Depth and Width") +
scale_color_manual(values = c("X1" = "black")
trained_predict <- ggplot(trained_results, aes(x = hidden)) +
geom_point(aes(y = meanPredict, color = "X1"), size = 1) +
xlab("Depth and Width") +
ylab("Mean Predicts") +
scale_color_manual(values = c("X1" = "black"))
trained_predict <- ggplot(trained_results, aes(x = hidden)) +
geom_point(aes(y = meanPredict, color = "X1"), size = 1) +
xlab("Depth and Width") +
ylab("Mean Predicts") +
scale_color_manual(values = c("X1" = "black"))
trained_predict
trained_predict <- ggplot(trained_results, aes(x = hidden)) +
geom_point(aes(y = meanPredict, color = "black"), size = 1) +
xlab("Depth and Width") +
ylab("Mean Predicts")
trained_predict
trained_predict <- ggplot(trained_results, aes(x = hidden)) +
geom_point(aes(y = meanPredict), size = 1) +
xlab("Depth and Width") +
ylab("Mean Predicts")
trained_predict
untrained_predict <- ggplot(untrained_results, aes(x = hidden)) +
geom_point(aes(y = meanPredict), size = 1) +
xlab("Depth and Width") +
ylab("Mean Predicts")
untrained_predict
earlyStop_predict <- ggplot(earlyStop_results, aes(x = hidden)) +
geom_point(aes(y = meanPredict), size = 1) +
xlab("Depth and Width") +
ylab("Mean Predicts")
earlyStop_predict
load("trained_results.Rdata")
trained_results <- results
load("untrained_results.Rdata")
untrained_results <- results
load("earlyStop_results.Rdata")
earlyStop_results <- results
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
View(split_columns)
df$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
View(df)
View(results)
View(split_columns)
View(results)
results <- df[-which(names(df) == "hidden")]
results <- results[-which(names(df) == "hidden")]
trained_matrix <- as.matrix(results)
View(trained_matrix)
View(trained_matrix)
view(trained_matrix)
header(trained_matrix)
head(trained_matrix)
trained_matrix
View(results)
View(results)
View(results)
View(results)
View(results)
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(df) == "hidden")]
class(results)
results
results <- df[-which(names(df) == "hidden")]
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
View(results)
Depth <- df$Depth
Depth <- results$Depth
Width <- results$Width
results <- results[-c("Depth", "Width")]
results <- cbind(Depth, Width, results)
View(results)
results <- results[, -c("Depth", "Width")]
results <- results[, -c("Depth", "Width")]
results <- results[, -c("Depth", "Width")]
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
Depth <- results$Depth
Width <- results$Width
results <- results[, -c("Depth", "Width")]
results <- cbind(Depth, Width, results)
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
Depth <- results$Depth
Width <- results$Width
results <- results[, -c("Depth", "Width")]
results <- cbind(Depth, Width, results)
colnames(results)
results <- results[, -"Depth"]
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
Depth <- results$Depth
Width <- results$Width
results <- results[, -12]
results <- results[, -13]
results <- cbind(Depth, Width, results)
results <- results[, -12]
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
Depth <- results$Depth
Width <- results$Width
results <- results[, -12]
results <- results[, -12]
results <- cbind(Depth, Width, results)
library(tidyr)
results_wide <- spread(results, condition, measurement)
results_wide <- spread(results, Depth, Width)
results_wide
View(results_wide)
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
Depth <- results$Depth
Width <- results$Width
results <- results[, -12]
results <- results[, -12]
results <- cbind(Depth, Width, results)
View(results)
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
Depth <- results$Depth
Width <- results$Width
results <- results[, -12]
results <- results[, -12]
results <- cbind(Depth, Width, results)
View(results)
matrix_name <- as.matrix(results)
View(matrix_name)
View(matrix_name)
fields::image.plot(matrix_name)
fields::image.plot(matrix_name$Depth, matrix_name$Width)
fields::image.plot(Depth, Width)
class(matrix_name)
fields::image.plot(Depth, Width, data=matrix_name)
library(tidyr)
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
Depth <- results$Depth
Width <- results$Width
results <- results[, -12]
results <- results[, -12]
results <- cbind(Depth, Width, results)
trained_results_matrix <- as.matrix(results)
load("untrained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
Depth <- results$Depth
Width <- results$Width
results <- results[, -12]
results <- results[, -12]
results <- cbind(Depth, Width, results)
untrained_results_matrix <- as.matrix(results)
load("earlyStop_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
Depth <- results$Depth
Width <- results$Width
results <- results[, -12]
results <- results[, -12]
results <- cbind(Depth, Width, results)
early_Stop_results_matrix <- as.matrix(results)
View(early_Stop_results_matrix)
View(split_columns)
View(trained_results_matrix)
View(untrained_results_matrix)
fields::image.plot(untrained_results.Rdata)
fields::image.plot(untrained_results_matrix)
Depth <- results$Depth
Width <- results$Width
X1_slope <- results$X1_slope
fields::image.plot(x = Width, y = Depth, z = X1_slope)
results <- subset(results, select = c(Depth, Width, X1_slope))
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
results <- subset(results, select = c(Depth, Width, X1_slope))
View(results)
data_wide <- spread(results, Width, X1_slope)
data_wide
class(data_wide)
fields::image.plot(x = Width, y = Depth, z = X1_slope)
fields::image.plot(results_wide)
results_wide <- spread(results, Width, X1_slope)
results_wide
fields::image.plot(results_wide)
View(results_wide)
as.matrix(results_wide)
results <- as.matrix(results_wide)
fields::image.plot(results)
fields::image.plot(x = results$Widht)
fields::image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot")
fields::image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot")
fields::image.plot(x = Width, Y = Depth, xlab = "Width", ylab = "Depth", main = "Image Plot")
results <- subset(results, select = c(Width, X1_slope))
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
results <- subset(results, select = c(Width, X1_slope))
results_wide <- spread(results, Width, X1_slope)
results <- results[, -c(1)]
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
results <- subset(results, select = c(Depth, Width, X1_slope))
results_wide <- spread(results, Width, X1_slope)
results <- as.matrix(results_wide)
results <- results[, -c(1)]
View(results)
fields::image.plot(xlab = "Width", ylab = "Depth", main = "Image Plot")
fields::image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot")
fields::image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", add = TRUE)
fields::image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", add = TRUE)
library(fields)
image(results)
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot")
image(results)
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot")
load("untrained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
results <- subset(results, select = c(Depth, Width, X1_slope))
results_wide <- spread(results, Width, X1_slope)
results <- as.matrix(results_wide)
results <- results[, -c(1)]
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot")
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
results <- subset(results, select = c(Depth, Width, X1_slope))
results_wide <- spread(results, Width, X1_slope)
results <- as.matrix(results_wide)
results <- results[, -c(1)]
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot")
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
results <- subset(results, select = c(Depth, Width, X1_slope))
results_wide <- spread(results, Width, X1_slope)
results <- as.matrix(results_wide)
results <- results[, -c(1)]
Depth = results$Depth
View(results)
Width = colnames(results)
image.plot(results, x = Width, xlab = "Width", ylab = "Depth", main = "Image Plot")
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", asp = 1.5)
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", asp = 0.67)
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", asp = 1)
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", asp = 1)
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", asp = 1.5)
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
results <- subset(results, select = c(Depth, Width, X1_slope))
View(results)
results_wide <- spread(results, Width, X1_slope)
View(results_wide)
View(results)
results <- as.matrix(results_wide)
results <- results[, -c(1)]
View(results)
colnames(results)
as.numeric(colnames(results))
x-range = c(as.numeric(colnames(results)))
x_range = c(as.numeric(colnames(results)))
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", xlim = x_range)
y_range = c(as.numeric(rownames(results)))
x_range
y_range
y_range = c(rownames(results)))
y_range = c(rownames(results))
y_range
y_range = c(1:10)
y_range
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", xlim = x_range, ylim = y_range)
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", ylim = x_range, xlim = y_range)
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", xlim = range(x_range), ylim = range(y_range))
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", xlim = range(x_range), ylim = range(y_range))
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", xlim = range(x_range), ylim = range(y_range), zlim = c(0, 1.0))
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", xlim = range(x_range), ylim = range(y_range), zlim = c(0, 1.2))
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", xlim = range(x_range), ylim = range(y_range), zlim = c(0, 1.0))
z_values <- as.matrix(results[16:ncol(results)])
x_coords <- 1:ncol(z_values)
y_coords <- 1:nrow(z_values)
x_grid <- expand.grid(x = x_coords, y = y_coords)
image.plot(x = x_grid$x, y = x_grid$y, z = z_values, xlab = "Width", ylab = "Depth", main = "Image Plot", xlim = c(1, ncol(z_values)), ylim = c(1, nrow(z_values)), zlim = c(0, 1.0))
View(z_values)
View(z_values)
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", xlim = range(x_range), ylim = range(y_range), zlim = c(0, 1.0))
image.plot(results)
image.plot(z = results)
image.plot(z = results, xlab = "Width", ylab = "Depth", main = "Image Plot", xlim = range(x_range), ylim = range(y_range), zlim = c(0, 1.0))
image.plot(x = x_range, y = y_range, z = results)
image.plot(y = x_range, z = y_range, z = results)
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
results <- subset(results, select = c(Depth, Width, X1_slope))
results_wide <- spread(results, Depth, X1_slope)
results <- as.matrix(results_wide)
results <- results[, -c(1)]
x_range = c(as.numeric(colnames(results)))
y_range = c(1:10)
image.plot(x = x_range, y = y_range, z = results)
image.plot(y = x_range, x = y_range, z = results)
image.plot(results)
x_range = c(1, 2, 3, 4, 6, 10, 14, 21, 31, 46, 68, 101, 148, 218, 320)
y_range = c(1:10)
image.plot(x = x_range, y = y_range, z = results)
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
results <- subset(results, select = c(Depth, Width, X1_slope))
results_wide <- spread(results, Depth, X1_slope)
results <- as.matrix(results_wide)
results <- results[, -c(1)]
x_range = c(1, 2, 3, 4, 6, 10, 14, 21, 31, 46, 68, 101, 148, 218, 320)
y_range = c(1:10)
image.plot(x = x_range, y = y_range, z = results)
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", xlim = range(x_range), ylim = range(y_range), zlim = c(0, 1.0))
library(fields)
library(tidyr)
load("trained_results.Rdata")
split_columns <- strsplit(results$hidden, " ")
results$Depth <- sapply(split_columns, function(x) as.numeric(x[2]))
results$Width <- sapply(split_columns, function(x) as.numeric(x[4]))
results <- results[-which(names(results) == "hidden")]
results <- subset(results, select = c(Depth, Width, X1_slope))
results_wide <- spread(results, Depth, X1_slope)
results <- as.matrix(results_wide)
results <- results[, -c(1)]
x_range = c(1, 2, 3, 4, 6, 10, 14, 21, 31, 46, 68, 101, 148, 218, 320)
y_range = c(1:10)
image.plot(x = x_range, y = y_range, z = results)
image.plot(results, xlab = "Width", ylab = "Depth", main = "Image Plot", xlim = range(x_range), ylim = range(y_range), zlim = c(0, 1.0))
